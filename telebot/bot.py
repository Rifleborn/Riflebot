# –±–æ—Ç –æ—Ç—Å–∏–ª–∞—î —Ñ–æ—Ç–æ —ñ –≤—Å—é —Ñ—ñ–≥–Ω—é
# —Ä–æ–∑–±—Ä—ñ—Ç–∏—Å—å —â–æ –∑–∞ markup

#tasks:
#1. –í–∑—è—Ç—Ç—è —Ç–µ–∫—Å—Ç—É, –≤—ñ–¥—Å–∏–ª–∞–Ω–Ω—è –π–æ–≥–æ –±–æ—Ç–æ–º(—Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–Ω–æ–ø–∫—É —è–∫–∞ –±—É–¥–µ –≤–∏—Ç—è–≥—É–≤—Ç–∏ –∑ –î–° –Ω–æ–≤–∏–Ω—É)
#2. –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ–º—ñ–∂–Ω–µ —Å—Ö–æ–≤–∏—â–µ –≤—Å—ñ—Ö –Ω–æ–≤–∏–Ω(—Ö–∑ —è–∫ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º–µ)
#3. RSS —Ä–æ–∑—ñ–±—Ä–∞—Ç–∏—Å—å —â–æ —Ü–µ (https://arma3.com/ —ñ –ø–æ –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ —Å–µ—Ä–≤–µ—Ä–∏ –î–°)



#   –∞–≤—Ç–æ—Ä Rifleborn
#   cd c:\Users\User\Desktop\bot\
#   python bot.py
import telebot
import config
import random
import os

#rss shit idk what it is
import feedparser
import datetime
import configparser
import urllib.request, urllib.parse, urllib.error

from telebot import types

#=====================–ø–æ—á–∞—Ç–æ–∫ –∫–æ–¥—É –¥–µ –∫—É–ø–∞ –≤—Å—å–æ–≥–æ –∑ —á–∏–º —Ç—Ä–µ–±–∞ —Ä–æ–∑–±–∏—Ä–∞—Ç–∏—Å—å=============================
CONST_IMAGES_DIR = 'images';
# —Å—Ö–æ–∂–µ –¥—ñ—Å—Ç–∞—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —Ç–æ–∫–µ–Ω –∑ –∫–æ–Ω—Ñ—ñ–≥—É
bot = telebot.TeleBot(config.TOKEN)

# –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑ —Ñ–∞–π–ª—É settings.ini
config = configparser.ConfigParser()
config.read('settings.ini')
FEED = config.get('RSS', 'feed')
DATETIME = config.get('RSS', 'DATETIME')
rss = feedparser.parse(FEED)


# handler –Ω–∞ –∫–æ–º–∞–Ω–¥—É —Å—Ç–∞—Ä—Ç
@bot.message_handler(commands=['start'])
# —Ñ—É–Ω–∫—Ü—ñ—è, –ø–æ —Å—É—Ç—ñ –ø–æ—á–∞—Ç–æ–∫ "–ø—Ä–æ–≥—Ä–∞–º–∏"
def welcome(message):
    # ===============RSS shit======================

    for post in reversed(rss.entries):
        data = post.published
        time = datetime.datetime.strptime(data, '%a, %d %b %Y %H:%M:%S %z')
        time_old = config.get('RSS', 'DATETIME')
        time_old = datetime.datetime.strptime(time_old, '%Y-%m-%d  %H:%M:%S%z')

        print(time)
        print(time_old)
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã
        if time <= time_old:
            continue
        else:
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –∏ –¥–∞—Ç—É –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ –≤ —Ñ–∞–π–ª
            config.set('RSS', 'DATETIME', str(time))
            with open('settings.ini', "w") as config_file:
                config.write(config_file)

        print('---------------------------------')
        print(time)

        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Å—Ç–∞
        text = post.title
        print(text)

        # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
        img = post.links[1].href
        print(img)

        # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ—Å—Ç
        link = post.links[0].href
        print(link)

        # –°–∫–∞—á–∏–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
        urllib.request.urlretrieve(img, 'img.jpg')

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ Telegram
        bot.send_photo(message.chat.id, open('img.jpg', 'rb'))
        bot.send_message(message.chat.id, '<a href="' + link + '">' + text + '</a>', parse_mode='HTML')

    # ===============end of RSS====================

    #=============
    user_markup = telebot.types.ReplyKeyboardMarkup(True);
    user_markup.row('/start', '/stop');
    user_markup.row('RSS', '2');
    user_markup.row('3', '–∑–∞–∫–∏–Ω—É—Ç–∏ –≥—Ä–æ—à—ñ —Å–ø—ñ–ª—å–Ω–æ—Ç—ñ(–ó–†–û–ë–ò–¢–ò –û–ü–õ–ê–¢–£ –¢–£–¢)', 'Discord-—Å–µ—Ä–≤–µ—Ä–∏');
    bot.send_message(message.from_user.id, '–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –≤ —Ü—é –Ω–æ–≤—É —Å—É—á–∞—Å–Ω—É –£–∫—Ä–∞—ó–Ω—É', reply_markup=user_markup);
 
@bot.message_handler(content_types=['text'])
def some_shit(message):
    if message.chat.type == 'private':
        if message.text == 'üé≤ –ß–∏—Å–ª–æ –±—É–¥—å —è–∫–µ –≤–∑–∞–≥–∞–ª—ñ –ø–æ—Ñ—ñ–∫':
            bot.send_message(message.chat.id, str(random.randint(0,30)))

        elif message.text == 'üòä –Ø–∫ —Å–ø—Ä–∞–≤–∏?':
 
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–î–æ–±—Ä–µ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –¥—É–∂–µ", callback_data='bad')
 
            markup.add(item1, item2)
 
            bot.send_message(message.chat.id, '–ß—É–¥–æ–≤–æ, —è–∫ —Å–∞–º?', reply_markup=markup)

        # –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ discord —Å–ø—ñ–ª—å–Ω–æ—Ç–∏
        elif message.text == '–ö–∞–Ω–∞–ª–∏':
        # —Ä–æ–∑–±—ñ—Ä–∞—Ç–∏—Å—å —â–æ —Ü–µ –∑–Ω–∞—á–∏—Ç—å
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("Arma 3 Ukraine", url="https://discord.gg/DYA3dNS"))
            bot.send_message(message.chat.id, '–û—Å—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è:', parse_mode='html', reply_markup=markup)
   
        elif message.text == '–ß–æ—Ä—Ç' or message.text == '—á–æ—Ä—Ç':

        #send_random_picture
            all_files_in_directory = os.listdir(CONST_IMAGES_DIR)
        #–¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –∑ —Ñ–æ—Ç–∫–æ—é
            file = random.choice(all_files_in_directory)
            photo = open('images' + '/' + file, 'rb')
        #–ø—ñ–¥–ø–∏—Å –¥–æ —Ñ–æ—Ç–æ
            caption = "–Ω–∏–∂–Ω—ñ–π —Ç–µ–∫—Å—Ç"
        #–≤—ñ–¥—ñ—Å–ª–∞—Ç–∏ —Ñ–æ—Ç–æ
            bot.send_photo(message.chat.id, photo, caption)
            photo.close();

        elif message.text == 'RSS':
            bot.send_message(message.chat.id, '–ë—É–≤–∞–π.')
            bot.stop_polling();

        elif message.text == '/stop':
            bot.send_message(message.chat.id, '–ë—É–≤–∞–π.')
            bot.stop_polling();

        else:
            bot.send_message(message.chat.id, '–ü–æ–Ω—è—Ç—Ç—è –Ω–µ –º–∞—é —â–æ –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏ üò¢')

 
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–û—Ç —ñ –¥–æ–±—Ä–µ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—É–≤–∞ üò¢')
 
            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üòä –Ø–∫ —Å–ø—Ä–∞–≤–∏?",
                reply_markup=None)
 
            # show alert
            bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
                text="!–¢–ï–ö–°–¢–û–í–ï –ü–û–í–Ü–î–û–ú–õ–ï–ù–ù–Ø!")
 
    except Exception as e:
        print(repr(e))

# –ù–ï –†–û–ë–ò–¢–¨, –ó–†–û–ë–ò–í –ß–ï–†–ï–ó –ö–û–°–¢–ò–õ–¨ –í–ò–©–ï
@bot.message_handler(commands=['stop'])
def handle_stop(message):
    hide_markup = telebot.types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, "–ë—É–≤–∞–π.", reply_markup = hide_markup)
    bot.stop_polling()
# RUN
bot.polling(none_stop=True)